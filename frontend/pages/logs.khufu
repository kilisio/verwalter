import {repr} from '../util/object'
import {refresher} from '../middleware/request'
import {index, fetch_indexes} from '../stores/logs'
import {bool, enable, disable} from '../stores/simple'
import {init, value, set} from '../stores/simple'
import {log, view_from, show_mark, matches_filter, filtered} from '../stores/logs'

style:
  .RoleFinish
    border-bottom: solid silver 2px

view main(status, expert_mode, router):
  <h1> "Logs"
  <div>
    <h2> "Index"
    store @log = log | refresher
    store @index = index | refresher | fetch_indexes
    store @hardcore = bool | init(false)
    store @role_filter = router.query('filter')
    if @index.items:
      <table.table.table-hover>
        <thead>
          <tr>
            <th> "Time"
            <th> "Deployment Id"
            if @hardcore:
              <th> "Mark"
              <th>
                "Action "
                <button>
                  link {click} disable() -> @hardcore
                  "-"
            else:
              <th>
                <input type="text" placeholder="Role" value=@role_filter>
                  link {input} set(this.value) -> @role_filter
              <th>
                "Action "
                <button>
                  link {click} enable() -> @hardcore
                  "*"
            <th>
        <tbody>
          for record of filtered(@index.items, @role_filter) key repr(record):
              <tr class=(record[3].variant or record[3])>
                <td>
                  record[0]
                <td>
                  record[1]
                if @hardcore:
                  <td>
                    repr(record[2])
                  <td>
                    repr(record[3])
                else:
                  <td>
                    if record.role:
                      record.role
                    else:
                      `-- ${ record[2].variant.toLowerCase() } --`
                  <td>
                    if record[3].variant:
                      record[3].variant
                      " "
                      <code>
                        record[3].fields
                    elif record[3] == "ExternalLog":
                      "ExternalLog "
                      <code>
                        record[2].fields[0]
                    else:
                      record[3]
                <td>
                  <a href="#log">
                    link {click} view_from(record[2]) -> @log
                    link {click} show_mark(record[2]) -> @log
                    "View from here"
    <h2 id="log"> "Logview"
    <div>
      <span>"Fetching"
      <code>
        repr(@log.fetching)
    <pre>
      @log.text

