// A frontend that allows to switch version of the role
import {entries, repr, pretty, is_string, reversed} from '../util/object'
import pending_actions from '../stores/actions'
import {refresher, json} from '../middleware/request'
import {execute} from '../util/action'
import {is_leader} from '../util/status'
import {total_processes} from '../util/schedule'
import {show_leaders} from '../util/leaders.khufu'
import {logs} from './logs.khufu'
import {value, set, init} from '../stores/simple'
import {filter_versions} from '../util/version'
import {main as versions} from '../blocks/version_buttons.khufu'
import {main as global_actions} from '../blocks/global_actions.khufu'
import {main as processes} from '../blocks/processes.khufu'


style:
  .rotate
    animation-name: rotateThis
    animation-duration: .5s
    animation-iteration-count: infinite
    animation-timing-function: linear
  .panel
    max-width: 40ex


view main(role, role_name, {role_state, schedule, system_status, router}):
  <div>
    store @actions = pending_actions | refresher
      | json('/v1/pending_actions')

    <h2> "Status Info"
    <table.table.table-hover>
      <thead>
        <tr>
          <th> "Property"
          <th> "Value"
      <tbody>
        <tr>
          <td> "Version"
          <td>
            role_state.version
      if role.info:
        <tbody>
          for [name, value] of entries(role.info) key name:
            <tr>
              <td>
                name
              <td>
                value

    processes(-> @actions, schedule, role, role_name, is_leader(system_status))
    logs(role_name, router)

    if is_leader(system_status):
      <div>
        versions(-> @actions, role, role_name, router)
        global_actions(-> @actions, role, role_name, router)
    else:
      show_leaders("Actions are Only Available on Leader",
        `/role/${role_name}`,
        system_status)
