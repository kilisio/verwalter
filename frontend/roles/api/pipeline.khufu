import {pretty_json, enumerate} from '../../util/object'
import {step_and_index} from '../../util/update'
import {value, bool, set, init, toggle, disable} from '../../stores/simple'
import {from_ms, till_now_ms} from '../../util/time'


style:
  .pipeline
    width: 100%
    display: flex
    flex-direction: row
  .stage
    border: solid rgb(173, 173, 173) 1px
    border-right-width: 0px
    padding: 4px 8px
  .stage.start
    border-radius: 4px 0 0 4px
  .stage.done
    border-radius: 0 4px 4px 0
    border-right-width: 1px
  .title
    font-weight: bold
  button
    margin-left: 4px
  .now
    flex-grow: 2

  .progress-bar-base
    margin: 8px
    height: 20px
  .progress-mark
    margin-left: 4px
    margin-right: 4px


view preview(pipeline):
  <p.pipeline>
    <div.stage.start>
      <div.title> "Start"
    for stage of pipeline:
      <div.stage>
        store @show_repr = bool | init(false)
        <div.title>
          stage.name
          <button.btn.btn-xs.btn-default>
            link {click} toggle(@show_repr) -> @show_repr
            <span.caret>
        if @show_repr:
          <pre>
            pretty_json(stage)
    <div.stage.done>
      <div.title> "Done"


view progress(update):
  let pipeline = update.pipeline
  let [step, step_idx] = step_and_index(update.pipeline, update.step)
  <p.pipeline>
    <div.stage.start.bg-success>
      <div.title> "Start"
    for [idx, stage] of enumerate(pipeline) key stage.name:
      <div.stage.now.bg-success?(idx < step_idx).bg-warning?(idx==step_idx)>
        store @show_repr = bool | init(false)
        <div.title>
          stage.name
          <button.btn.btn-xs.btn-default>
            link {click} toggle(@show_repr) -> @show_repr
            <span.caret>
        if stage.name == step.name:
          let active = update.direction != 'pause'
          let spent = till_now_ms(from_ms(update.change_ts))
          let progress = (update.smooth_step ?
            (update.smooth_step / step.substeps) :
            (spent / (update.forward_time*1000)))
          <div.progress-bar-base>
            <div.progress>
              <div.progress-bar.progress-bar-striped.active?(active)
                  role="progressbar" aria-valuenow="40"
                  aria-valuemin="0" aria-valuemax="100"
                  style={width: `${ progress*100 }%`}>
                if update.direction == 'backward':
                  <span.progress-mark.glyphicon.glyphicon-backward>
                `${ (progress*100).toFixed(0) }%`
                if update.direction == 'forward':
                  <span.progress-mark.glyphicon.glyphicon-forward>
        if @show_repr:
          <pre>
            pretty_json(stage)
    <div.stage.done>
      <div.title> "Done"
