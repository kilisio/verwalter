import {entries} from '../util/object'
import {execute} from '../util/action'
import pending_actions from '../stores/actions'
import {refresher, json} from '../middleware/request'
import {filter_versions} from '../util/version'
import {set as rtrset, input} from 'khufu-routing'
import {value, set} from '../stores/simple'

style:
  .rotate
    animation-name: rotateThis
    animation-duration: .5s
    animation-iteration-count: infinite
    animation-timing-function: linear
  .versions
    display: flex
    flex-wrap: wrap
  .version-block
    display: flex
    align-items: center
    margin: 16px
    border: solid 2px silver
    border-radius: 7px
    transition: height 2s
    height: 46px
  .version-block.confirm
    height: 120px
  .version-id
    font-size: 150%
    padding: 4px 2px 4px 12px
  .version-btn
    margin: 4px
  .panel
    max-width: 40ex
  .well.confirm
    margin: 8px


view main(@actions, role, role_name, router):
  <div>
    <h2> "Available Versions"
    store @trunc = router.query('trunc')
    store @filter = router.query('versions')

    <div.input-group.panel>
      <div.input-group-btn>
        <button.btn.btn-default.active?(@trunc == 'no')>
          link {click} rtrset(@trunc == 'no' ? '' : 'no') -> @trunc
          "Show All"
      <input.form-control placeholder=`Filter Versions` value=@filter>
        link {input} input(this.value) -> @filter
      if @filter:
        <div.input-group-btn>
          <button.btn.btn-default>
            link {click} rtrset('') -> @filter
            <span.glyphicon.glyphicon-remove>

    <div.versions>
      store @confirm = value
      let all = filter_versions(role.versions or [], @filter)
      let shown = @trunc == 'no' and all or all.slice(0, 20)
      let buttons = role.frontend.version_buttons or [
        {id: 'quick_switch',
         kind: 'danger',
         title: 'Switch To',
         confirm: 'Do you really want to switch to version {version}?',
         }]
      for ver of shown:
        <div.version-block.confirm?(@confirm and ver == @confirm.ver)>
          <div.version-id>
            ver
          for button of buttons key button.id:
            let kind = button.kind ? button.kind : 'default'
            if button.confirm:
              if (@confirm and button.id == @confirm.id and
                  ver == @confirm.ver):
                <div.confirm.well>
                  <div.confirm-title>
                    button.confirm.replace('{version}', ver)
                  <button.btn.version-btn.btn-danger>
                    link {click} set(null) -> @confirm
                    link {click} execute(
                        {"button": {action: button.id,
                                    data: button.data,
                                    version: ver, "role": role_name}}
                      ) -> @actions
                    "Yes"
                  <button.btn.version-btn.btn-success>
                    link {click} set(null) -> @confirm
                    "No"
              else:
                <button.btn.version-btn class=`btn-${ kind }`>
                  link {click} set({id: button.id, ver: ver}) -> @confirm
                  button.title.replace('{version}', ver)
                  for [id, act] of entries(@actions) key id:
                    let abut = act.button
                    if abut.version == ver and abut.action == button.id:
                      " "
                      <span.glyphicon.glyphicon-refresh.rotate>
            else:
              <button.btn.version-btn class=`btn-${ kind }`>
                link {click} set(null) -> @confirm
                link {click} execute(
                    {"button": {action: button.id,
                                data: button.data,
                                version: ver, "role": role_name}}
                  ) -> @actions
                button.title.replace('{version}', ver)
                for [id, act] of entries(@actions) key id:
                  let abut = act.button
                  if abut.version == ver and abut.action == button.id:
                    " "
                    <span.glyphicon.glyphicon-refresh.rotate>
